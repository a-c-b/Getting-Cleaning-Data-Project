{
    "contents" : "\n##############  PHASE 1 ######################################\n##  \n##  Set up libraries\n##  Set up temporary variables\n##  Delete possible old data.  Download data\n##  Unzip freshly downloaded data\n##  Begin transforming data sets until the Test and Training data sets\n##      can be combined to include descriptive activity names\n##      and descriptive feature names for the variable labels\n##\n##################################################\n\n## libraries to ensure are loaded\n        ##library(plyr)\n        library(dplyr)\n\n\n\n#start with a clean load of the data.  Delete old directories and files\n        if(file.exists(\"./UCI HAR Dataset\")){unlink(\"./UCI HAR Dataset\", \n                                                        recursive = TRUE)}\n        dataset_url <- \"http://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip \" \n\n########## Loading ##########\n###\n##  Begin unzipping, loading and tidying the various datasets\n###\n\n## the files are binary files so require the mode = 'wb' parameter \n## to successfully unzip\n        if(!file.exists(\"Dataset.zip\")){\n        download.file(dataset_url, destfile=\"Dataset.zip\", mode = 'wb')}\n\n#unzip the dataset\n        unzip(\"Dataset.zip\", overwrite= TRUE)\n\n\n#List of all features\n        features.list<-read.csv(\"./UCI HAR Dataset/features.txt\", sep=\" \", header = FALSE)\n# Links the numeric labels of the activity with their activity name\n        activity.labels<-read.csv(\"./UCI HAR Dataset/activity_labels.txt\", sep=\" \", header = FALSE)\n                names(activity.labels)<-c(\"ActivityNum\",\"Activity\")\n\n# Load the files of Test labels, subjects, and data.  Name the columns.\n        y.test<-read.csv(\"./UCI HAR Dataset/test/y_test.txt\", sep=\"\", header = FALSE)\n                names(y.test)<-\"ActivityNum\"\n        subject.test<-read.csv(\"./UCI HAR Dataset/test/subject_test.txt\", sep=\"\", header = FALSE)\n                names(subject.test)<-c(\"Subject\")\n        x.test<-read.csv(\"./UCI HAR Dataset/test/X_test.txt\", sep=\"\", header = FALSE)\n                names(x.test)<-features.list$V2\n\n\n####  Begin processing the files #############\n#\n#    Combining tables of information to add descriptors\n#    to the dataset, including readable headers\n#    the association to a subject and the activity label\n#\n#########\n\n## create a unique row number to merge files together\n        y.test$rownum<-c(1:nrow(y.test))\n        subject.test$rownum<-c(1:nrow(subject.test))\n        x.test$rownum<-c(1:nrow(x.test))\n\n# Merge the Activity Number with an Activity Label\n        activity.test<-merge(y.test, activity.labels, by = \"ActivityNum\", all.x = TRUE)\n\n##  create the cleaned test data set by combining\n#  the subject information with the activity to the dataset\n\n        test.data<-merge(activity.test, x.test, by = \"rownum\", all.x = TRUE, all.y=TRUE)\n        test.data<-merge(subject.test, test.data, by=\"rownum\", all.x = TRUE, all.y = TRUE)\n\n##########  Training data\n##\n##    duplicated from test\n##\n##########\n# Load the files of train labels, subjects, and data.  Name the columns.\n        y.train<-read.csv(\"./UCI HAR Dataset/train/y_train.txt\", sep=\"\", header = FALSE)\n                names(y.train)<-\"ActivityNum\"\n        subject.train<-read.csv(\"./UCI HAR Dataset/train/subject_train.txt\", sep=\"\", header = FALSE)\n                names(subject.train)<-c(\"Subject\")\n        x.train<-read.csv(\"./UCI HAR Dataset/train/X_train.txt\", sep=\"\", header = FALSE)\n                names(x.train)<-features.list$V2\n\n\n####  Begin processing the files #############\n#\n#    Combining tables of information to add descriptors\n#    to the dataset, including readable headers\n#    the association to a subject and the activity label\n#\n#########\n\n## create a unique row number to merge files together\n        y.train$rownum<-c(1:nrow(y.train))\n        subject.train$rownum<-c(1:nrow(subject.train))\n        x.train$rownum<-c(1:nrow(x.train))\n\n# Merge the Activity Number with an Activity Label\n        activity.train<-merge(y.train, activity.labels, by = \"ActivityNum\", all.x = TRUE)\n\n##  create the cleaned train data set by combining\n#  the subject information with the activity to the dataset\n\n        train.data<-merge(activity.train, x.train, by = \"rownum\", all.x = TRUE, all.y=TRUE)\n        train.data<-merge(subject.train, train.data, by=\"rownum\", all.x = TRUE, all.y = TRUE)\n\n###################################################\n###\n####  Create the Unified Dataset     ############\n###\n################################################\n\n#create the one dataset containing both test and training data\n        all.data<-rbind(test.data, train.data)\n        all.data$rownum<-c(1:nrow(all.data))\n\n#write the tidy dataset with the combined tables.\n        write.table(all.data, file = \"./one_dataset.txt\", col.names = TRUE, sep = \",\", row.names = FALSE)\n\n## clear memory for next phase of work \n        \n        rm(activity.test)\n        rm(activity.train)\n        rm(test.data)\n        rm(train.data)\n        rm(features.list)\n        rm(activity.labels)\n        rm(subject.test)\n        rm(subject.train)\n        rm(x.test); rm(y.test)\n        rm(x.train); rm(y.train)\n        \n        \n        \n######################PHASE 2###################### \n##        \n##  PHASE 2\n##\n##  Extracting only the measurements on the mean and standard deviation \n##  for each measurement.\n##\n##\n##  This will create a second tidy dataset.  A subset of which will contain\n##  only those variables out of the 564 variables in the all.data dataset\n##  which have \"mean\" or \"std\" found in the header name.\n##\n#############################################\n\n# Get all the names of all the headers for the entire dataset\n        names1<-names(all.data)\n\n##  preserve the first 3 columns of information\n        simple.id<-subset(all.data, select = c(rownum,Subject, Activity))\n        simple.id$SubjectActivity<-paste(simple.id$Subject,simple.id$Activity)\n        simple<-subset(simple.id, select=c(rownum, SubjectActivity))\n\n##  get the columns with the phrase \"mean\", then \"std\" in them\n        all.mean<-subset(all.data, select = names1 %in% grep(\"mean\", names1, value=TRUE))\n        all.mean$rownum<-c(1:nrow(all.mean))\n\n        all.std<-subset(all.data, select = names1 %in% grep(\"std\", names1, value=TRUE))\n        all.std$rownum<-c(1:nrow(all.std))\n\n\n## merge the three datasets back into one with all the names and key fields\n## and keep the two datasets for mean and standard deviation separated for \n## more simple processing\n        to.process <-merge(all.mean, all.std, by=\"rownum\", all.x = TRUE, all.y=TRUE)\n        to.process<-merge(simple,to.process,by=\"rownum\", all.x = TRUE, all.y=TRUE )\n        to.process<-subset(to.process, select = -rownum)\n        names1<-names(to.process)\n        \n\n######### Phase 3 ##########\n##\n##   Calculate the Averages for the combined datasets\n##\n##\n#####################################\n\n##   create a list to use with the aggregate function\n        SA<-list(to.process$SubjectActivity)\n      \n##  create the dataset which stores the result of the mean value\n##  for all features which contained either the phrase \"mean\" or \"std\"\n##  for all the subjects in each of their activities\n\n\n        result<-aggregate(to.process, by = SA, FUN = mean, na.rm=TRUE)\n\n##  get rid of the column which could not be calculated\n        result<-subset(result, select = -SubjectActivity)\n        names(result)<-names1\n\n##  create a table to develop a sort order by reusing\n##  the Subject and Activity tables which were unique by row number\n\n       \n       # library(dplyr)\n        sorted<-distinct(subset(simple.id,select = c(Subject, Activity, SubjectActivity)))\n        attach(sorted)\n        sorted<-sorted[order(Subject,Activity),]\n        sorted$rownum<-c(1:nrow(sorted))\n        sorted<-subset(sorted, select=c(SubjectActivity, rownum))\n        \n \n# merge the sort order with the result table\n        finished.result<-merge(result,sorted,by=\"SubjectActivity\", all.x = TRUE, all.y=TRUE )\n         attach(finished.result)\n        finished.result<-finished.result[order(rownum),]\n        finished.result<-subset(finished.result, select = -rownum)\n        write.table(finished.result, file = \"./finished_result.txt\", col.names = TRUE, sep = \",\", row.names = FALSE)       \n                \n####  End ####\n\n\n        \n        \n\n\n\n",
    "created" : 1414026325019.000,
    "dirty" : false,
    "encoding" : "ISO8859-1",
    "folds" : "",
    "hash" : "3908853107",
    "id" : "4B0F97FD",
    "lastKnownWriteTime" : 1414104000,
    "path" : "~/coursera/Getting-Cleaning-Data-Project/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : true,
    "type" : "r_source"
}